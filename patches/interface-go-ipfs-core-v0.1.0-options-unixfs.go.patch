--- /Users/tron/go/pkg/mod/github.com/ipfs/interface-go-ipfs-core@v0.1.0/options/unixfs.go	2019-10-09 11:19:32.000000000 -0700
+++ /tmp/interface-go-ipfs-core/options/unixfs.go	2019-10-09 11:22:39.000000000 -0700
@@ -4,7 +4,7 @@
 	"errors"
 	"fmt"
 
-	cid "github.com/ipfs/go-cid"
+	"github.com/ipfs/go-cid"
 	dag "github.com/ipfs/go-merkledag"
 	mh "github.com/multiformats/go-multihash"
 )
@@ -36,6 +36,15 @@
 	Events   chan<- interface{}
 	Silent   bool
 	Progress bool
+
+	Encrypt bool
+	Pubkey  string
+	PeerId  string
+}
+
+type UnixfsGetSettings struct {
+	Decrypt    bool
+	PrivateKey string
 }
 
 type UnixfsLsSettings struct {
@@ -43,6 +52,7 @@
 }
 
 type UnixfsAddOption func(*UnixfsAddSettings) error
+type UnixfsGetOption func(*UnixfsGetSettings) error
 type UnixfsLsOption func(*UnixfsLsSettings) error
 
 func UnixfsAddOptions(opts ...UnixfsAddOption) (*UnixfsAddSettings, cid.Prefix, error) {
@@ -66,6 +76,10 @@
 		Events:   nil,
 		Silent:   false,
 		Progress: false,
+
+		Encrypt: false,
+		Pubkey:  "",
+		PeerId:  "",
 	}
 
 	for _, opt := range opts {
@@ -119,6 +133,20 @@
 	return options, prefix, nil
 }
 
+func UnixfsGetOptions(opts ...UnixfsGetOption) (*UnixfsGetSettings, error) {
+	options := &UnixfsGetSettings{
+		Decrypt:    false,
+		PrivateKey: "",
+	}
+	for _, opt := range opts {
+		err := opt(options)
+		if err != nil {
+			return nil, err
+		}
+	}
+	return options, nil
+}
+
 func UnixfsLsOptions(opts ...UnixfsLsOption) (*UnixfsLsSettings, error) {
 	options := &UnixfsLsSettings{
 		ResolveChildren: true,
@@ -283,3 +311,40 @@
 		return nil
 	}
 }
+
+func (unixfsOpts) Encrypt(encrypt bool) UnixfsAddOption {
+	return func(settings *UnixfsAddSettings) error {
+		settings.Encrypt = encrypt
+		return nil
+	}
+}
+
+func (unixfsOpts) Pubkey(pubkey string) UnixfsAddOption {
+	return func(settings *UnixfsAddSettings) error {
+		settings.Pubkey = pubkey
+		return nil
+	}
+}
+
+func (unixfsOpts) PeerId(peerId string) UnixfsAddOption {
+	return func(settings *UnixfsAddSettings) error {
+		settings.PeerId = peerId
+		return nil
+	}
+}
+
+func (unixfsOpts) Decrypt(decrypt bool) UnixfsGetOption {
+	return func(settings *UnixfsGetSettings) error {
+		settings.Decrypt = decrypt
+		return nil
+	}
+}
+
+func (unixfsOpts) PrivateKey(privateKey string) UnixfsGetOption {
+	return func(settings *UnixfsGetSettings) error {
+		settings.PrivateKey = privateKey
+		return nil
+	}
+}
+
+

// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/TRON-US/go-btfs/protos/renter/renters.proto

package renterpb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "github.com/tron-us/protobuf/gogoproto"
	proto "github.com/tron-us/protobuf/proto"
	github_com_tron_us_protobuf_types "github.com/tron-us/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RenterSessionStatus struct {
	Status               string    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty" pg:"status"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" pg:"message"`
	LastUpdated          time.Time `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated,proto3,stdtime" json:"last_updated" pg:"last_updated"`
	ShardHashes          []string  `protobuf:"bytes,4,rep,name=shard_hashes,json=shardHashes,proto3" json:"shard_hashes,omitempty" pg:"shard_hashes"`
	Hash                 string    `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty" pg:"hash"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" pg:"-"`
	XXX_unrecognized     []byte    `json:"-" pg:"-"`
	XXX_sizecache        int32     `json:"-" pg:"-"`
}

func (m *RenterSessionStatus) Reset()         { *m = RenterSessionStatus{} }
func (m *RenterSessionStatus) String() string { return proto.CompactTextString(m) }
func (*RenterSessionStatus) ProtoMessage()    {}
func (*RenterSessionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_336e857e53dc1671, []int{0}
}
func (m *RenterSessionStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RenterSessionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RenterSessionStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RenterSessionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenterSessionStatus.Merge(m, src)
}
func (m *RenterSessionStatus) XXX_Size() int {
	return m.Size()
}
func (m *RenterSessionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RenterSessionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RenterSessionStatus proto.InternalMessageInfo

func (m *RenterSessionStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *RenterSessionStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RenterSessionStatus) GetLastUpdated() time.Time {
	if m != nil {
		return m.LastUpdated
	}
	return time.Time{}
}

func (m *RenterSessionStatus) GetShardHashes() []string {
	if m != nil {
		return m.ShardHashes
	}
	return nil
}

func (m *RenterSessionStatus) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (*RenterSessionStatus) XXX_MessageName() string {
	return "renter.RenterSessionStatus"
}

type RenterShardStatus struct {
	Status               string    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty" pg:"status"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" pg:"message"`
	LastUpdated          time.Time `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated,proto3,stdtime" json:"last_updated" pg:"last_updated"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" pg:"-"`
	XXX_unrecognized     []byte    `json:"-" pg:"-"`
	XXX_sizecache        int32     `json:"-" pg:"-"`
}

func (m *RenterShardStatus) Reset()         { *m = RenterShardStatus{} }
func (m *RenterShardStatus) String() string { return proto.CompactTextString(m) }
func (*RenterShardStatus) ProtoMessage()    {}
func (*RenterShardStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_336e857e53dc1671, []int{1}
}
func (m *RenterShardStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RenterShardStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RenterShardStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RenterShardStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenterShardStatus.Merge(m, src)
}
func (m *RenterShardStatus) XXX_Size() int {
	return m.Size()
}
func (m *RenterShardStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RenterShardStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RenterShardStatus proto.InternalMessageInfo

func (m *RenterShardStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *RenterShardStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RenterShardStatus) GetLastUpdated() time.Time {
	if m != nil {
		return m.LastUpdated
	}
	return time.Time{}
}

func (*RenterShardStatus) XXX_MessageName() string {
	return "renter.RenterShardStatus"
}

type RenterShardSignedContracts struct {
	SignedEscrowContract []byte   `protobuf:"bytes,1,opt,name=signed_escrow_contract,json=signedEscrowContract,proto3" json:"signed_escrow_contract,omitempty" pg:"signed_escrow_contract"`
	SignedGuardContract  []byte   `protobuf:"bytes,2,opt,name=signed_guard_contract,json=signedGuardContract,proto3" json:"signed_guard_contract,omitempty" pg:"signed_guard_contract"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" pg:"-"`
	XXX_unrecognized     []byte   `json:"-" pg:"-"`
	XXX_sizecache        int32    `json:"-" pg:"-"`
}

func (m *RenterShardSignedContracts) Reset()         { *m = RenterShardSignedContracts{} }
func (m *RenterShardSignedContracts) String() string { return proto.CompactTextString(m) }
func (*RenterShardSignedContracts) ProtoMessage()    {}
func (*RenterShardSignedContracts) Descriptor() ([]byte, []int) {
	return fileDescriptor_336e857e53dc1671, []int{2}
}
func (m *RenterShardSignedContracts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RenterShardSignedContracts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RenterShardSignedContracts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RenterShardSignedContracts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenterShardSignedContracts.Merge(m, src)
}
func (m *RenterShardSignedContracts) XXX_Size() int {
	return m.Size()
}
func (m *RenterShardSignedContracts) XXX_DiscardUnknown() {
	xxx_messageInfo_RenterShardSignedContracts.DiscardUnknown(m)
}

var xxx_messageInfo_RenterShardSignedContracts proto.InternalMessageInfo

func (m *RenterShardSignedContracts) GetSignedEscrowContract() []byte {
	if m != nil {
		return m.SignedEscrowContract
	}
	return nil
}

func (m *RenterShardSignedContracts) GetSignedGuardContract() []byte {
	if m != nil {
		return m.SignedGuardContract
	}
	return nil
}

func (*RenterShardSignedContracts) XXX_MessageName() string {
	return "renter.RenterShardSignedContracts"
}
func init() {
	proto.RegisterType((*RenterSessionStatus)(nil), "renter.RenterSessionStatus")
	golang_proto.RegisterType((*RenterSessionStatus)(nil), "renter.RenterSessionStatus")
	proto.RegisterType((*RenterShardStatus)(nil), "renter.RenterShardStatus")
	golang_proto.RegisterType((*RenterShardStatus)(nil), "renter.RenterShardStatus")
	proto.RegisterType((*RenterShardSignedContracts)(nil), "renter.RenterShardSignedContracts")
	golang_proto.RegisterType((*RenterShardSignedContracts)(nil), "renter.RenterShardSignedContracts")
}

func init() {
	proto.RegisterFile("github.com/TRON-US/go-btfs/protos/renter/renters.proto", fileDescriptor_336e857e53dc1671)
}
func init() {
	golang_proto.RegisterFile("github.com/TRON-US/go-btfs/protos/renter/renters.proto", fileDescriptor_336e857e53dc1671)
}

var fileDescriptor_336e857e53dc1671 = []byte{
	// 400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x92, 0xc1, 0xae, 0xd2, 0x40,
	0x14, 0x86, 0x1d, 0x40, 0x84, 0x29, 0x31, 0x71, 0x50, 0xd2, 0x74, 0x51, 0x90, 0x15, 0x1b, 0x5a,
	0x83, 0xc6, 0x07, 0xc0, 0x10, 0x5c, 0x29, 0x29, 0xb0, 0x71, 0xd3, 0x4c, 0xdb, 0x61, 0xda, 0x84,
	0x76, 0x9a, 0x9e, 0x69, 0x7c, 0x03, 0x97, 0xc6, 0xa5, 0x8f, 0xe3, 0x4e, 0x96, 0x3e, 0x81, 0x7a,
	0xe1, 0x25, 0xee, 0xf2, 0xa6, 0x33, 0xed, 0xbd, 0xbc, 0xc1, 0x5d, 0xf5, 0x9c, 0xff, 0x3f, 0x5f,
	0xf3, 0x9f, 0xc9, 0xc1, 0xef, 0x79, 0x22, 0xe3, 0x32, 0x70, 0x42, 0x91, 0xba, 0x3b, 0xef, 0xf3,
	0xa7, 0xf9, 0x7e, 0xeb, 0x72, 0x31, 0x0f, 0xe4, 0x01, 0xdc, 0xbc, 0x10, 0x52, 0x80, 0x5b, 0xb0,
	0x4c, 0xb2, 0xa2, 0xfe, 0x80, 0xa3, 0x54, 0xd2, 0xd5, 0xad, 0xf5, 0xe6, 0x8a, 0x97, 0x85, 0xc8,
	0xe6, 0x65, 0xcd, 0x05, 0xe5, 0xc1, 0xe5, 0x82, 0x0b, 0xd5, 0xa8, 0x4a, 0x93, 0xd6, 0x98, 0x0b,
	0xc1, 0x8f, 0xec, 0x61, 0x4a, 0x26, 0x29, 0x03, 0x49, 0xd3, 0x5c, 0x0f, 0x4c, 0x7f, 0x23, 0x3c,
	0xf4, 0xd4, 0xdf, 0xb7, 0x0c, 0x20, 0x11, 0xd9, 0x56, 0x52, 0x59, 0x02, 0x19, 0xe1, 0x2e, 0xa8,
	0xca, 0x44, 0x13, 0x34, 0xeb, 0x7b, 0x75, 0x47, 0x4c, 0xfc, 0x2c, 0x65, 0x00, 0x94, 0x33, 0xb3,
	0xa5, 0x8c, 0xa6, 0x25, 0x6b, 0x3c, 0x38, 0x52, 0x90, 0x7e, 0x99, 0x47, 0x54, 0xb2, 0xc8, 0x6c,
	0x4f, 0xd0, 0xcc, 0x58, 0x58, 0x8e, 0x4e, 0xe0, 0x34, 0x09, 0x9c, 0x5d, 0x93, 0x60, 0xd9, 0x3b,
	0xfd, 0x1d, 0x3f, 0xf9, 0xf1, 0x6f, 0x8c, 0x3c, 0xa3, 0x22, 0xf7, 0x1a, 0x24, 0xaf, 0xf1, 0x00,
	0x62, 0x5a, 0x44, 0x7e, 0x4c, 0x21, 0x66, 0x60, 0x76, 0x26, 0xed, 0x59, 0xdf, 0x33, 0x94, 0xf6,
	0x51, 0x49, 0x84, 0xe0, 0x4e, 0x65, 0x9a, 0x4f, 0x55, 0x04, 0x55, 0x4f, 0xbf, 0x23, 0xfc, 0xa2,
	0xde, 0xa4, 0x9a, 0x7c, 0xf4, 0x3d, 0xa6, 0xdf, 0x10, 0xb6, 0xae, 0x03, 0x25, 0x3c, 0x63, 0xd1,
	0x07, 0x91, 0xc9, 0x82, 0x86, 0x12, 0xc8, 0x3b, 0x3c, 0x02, 0x25, 0xf9, 0x0c, 0xc2, 0x42, 0x7c,
	0xf5, 0xc3, 0xda, 0x52, 0x49, 0x07, 0xde, 0x4b, 0xed, 0xae, 0x94, 0xd9, 0x60, 0x64, 0x81, 0x5f,
	0xd5, 0x14, 0x2f, 0xab, 0x37, 0xba, 0x87, 0x5a, 0x0a, 0x1a, 0x6a, 0x73, 0x5d, 0x79, 0x0d, 0xb3,
	0x5c, 0xdd, 0xde, 0xd8, 0xe8, 0x74, 0xb6, 0xd1, 0x9f, 0xb3, 0x8d, 0xfe, 0x9f, 0x6d, 0xf4, 0xf3,
	0x62, 0xa3, 0x5f, 0x17, 0x1b, 0x9d, 0x2e, 0x36, 0xc2, 0xcf, 0x13, 0xe1, 0x54, 0x17, 0xe8, 0xe8,
	0x23, 0x5b, 0x1a, 0x3a, 0xf3, 0xa6, 0xda, 0x73, 0x83, 0xbe, 0xf4, 0xb4, 0x9c, 0x07, 0x41, 0x57,
	0xad, 0xfe, 0xf6, 0x2e, 0x00, 0x00, 0xff, 0xff, 0x73, 0xbb, 0xb8, 0xfb, 0xc6, 0x02, 0x00, 0x00,
}

func (m *RenterSessionStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RenterSessionStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RenterSessionStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintRenters(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ShardHashes) > 0 {
		for iNdEx := len(m.ShardHashes) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ShardHashes[iNdEx])
			copy(dAtA[i:], m.ShardHashes[iNdEx])
			i = encodeVarintRenters(dAtA, i, uint64(len(m.ShardHashes[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	n1, err1 := github_com_tron_us_protobuf_types.StdTimeMarshalTo(m.LastUpdated, dAtA[i-github_com_tron_us_protobuf_types.SizeOfStdTime(m.LastUpdated):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintRenters(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x1a
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintRenters(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintRenters(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RenterShardStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RenterShardStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RenterShardStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	n2, err2 := github_com_tron_us_protobuf_types.StdTimeMarshalTo(m.LastUpdated, dAtA[i-github_com_tron_us_protobuf_types.SizeOfStdTime(m.LastUpdated):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintRenters(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x1a
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintRenters(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintRenters(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RenterShardSignedContracts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RenterShardSignedContracts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RenterShardSignedContracts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SignedGuardContract) > 0 {
		i -= len(m.SignedGuardContract)
		copy(dAtA[i:], m.SignedGuardContract)
		i = encodeVarintRenters(dAtA, i, uint64(len(m.SignedGuardContract)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SignedEscrowContract) > 0 {
		i -= len(m.SignedEscrowContract)
		copy(dAtA[i:], m.SignedEscrowContract)
		i = encodeVarintRenters(dAtA, i, uint64(len(m.SignedEscrowContract)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRenters(dAtA []byte, offset int, v uint64) int {
	offset -= sovRenters(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedRenterSessionStatus(r randyRenters, easy bool) *RenterSessionStatus {
	this := &RenterSessionStatus{}
	this.Status = string(randStringRenters(r))
	this.Message = string(randStringRenters(r))
	v1 := github_com_tron_us_protobuf_types.NewPopulatedStdTime(r, easy)
	this.LastUpdated = *v1
	v2 := r.Intn(10)
	this.ShardHashes = make([]string, v2)
	for i := 0; i < v2; i++ {
		this.ShardHashes[i] = string(randStringRenters(r))
	}
	this.Hash = string(randStringRenters(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedRenters(r, 6)
	}
	return this
}

func NewPopulatedRenterShardStatus(r randyRenters, easy bool) *RenterShardStatus {
	this := &RenterShardStatus{}
	this.Status = string(randStringRenters(r))
	this.Message = string(randStringRenters(r))
	v3 := github_com_tron_us_protobuf_types.NewPopulatedStdTime(r, easy)
	this.LastUpdated = *v3
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedRenters(r, 4)
	}
	return this
}

func NewPopulatedRenterShardSignedContracts(r randyRenters, easy bool) *RenterShardSignedContracts {
	this := &RenterShardSignedContracts{}
	v4 := r.Intn(100)
	this.SignedEscrowContract = make([]byte, v4)
	for i := 0; i < v4; i++ {
		this.SignedEscrowContract[i] = byte(r.Intn(256))
	}
	v5 := r.Intn(100)
	this.SignedGuardContract = make([]byte, v5)
	for i := 0; i < v5; i++ {
		this.SignedGuardContract[i] = byte(r.Intn(256))
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedRenters(r, 3)
	}
	return this
}

type randyRenters interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneRenters(r randyRenters) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringRenters(r randyRenters) string {
	v6 := r.Intn(100)
	tmps := make([]rune, v6)
	for i := 0; i < v6; i++ {
		tmps[i] = randUTF8RuneRenters(r)
	}
	return string(tmps)
}
func randUnrecognizedRenters(r randyRenters, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldRenters(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldRenters(dAtA []byte, r randyRenters, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateRenters(dAtA, uint64(key))
		v7 := r.Int63()
		if r.Intn(2) == 0 {
			v7 *= -1
		}
		dAtA = encodeVarintPopulateRenters(dAtA, uint64(v7))
	case 1:
		dAtA = encodeVarintPopulateRenters(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateRenters(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateRenters(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateRenters(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateRenters(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *RenterSessionStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovRenters(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovRenters(uint64(l))
	}
	l = github_com_tron_us_protobuf_types.SizeOfStdTime(m.LastUpdated)
	n += 1 + l + sovRenters(uint64(l))
	if len(m.ShardHashes) > 0 {
		for _, s := range m.ShardHashes {
			l = len(s)
			n += 1 + l + sovRenters(uint64(l))
		}
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovRenters(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RenterShardStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovRenters(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovRenters(uint64(l))
	}
	l = github_com_tron_us_protobuf_types.SizeOfStdTime(m.LastUpdated)
	n += 1 + l + sovRenters(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RenterShardSignedContracts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SignedEscrowContract)
	if l > 0 {
		n += 1 + l + sovRenters(uint64(l))
	}
	l = len(m.SignedGuardContract)
	if l > 0 {
		n += 1 + l + sovRenters(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovRenters(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRenters(x uint64) (n int) {
	return sovRenters(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RenterSessionStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRenters
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RenterSessionStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RenterSessionStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRenters
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRenters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRenters
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRenters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRenters
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRenters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_tron_us_protobuf_types.StdTimeUnmarshal(&m.LastUpdated, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShardHashes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRenters
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRenters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShardHashes = append(m.ShardHashes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRenters
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRenters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRenters(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRenters
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRenters
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RenterShardStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRenters
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RenterShardStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RenterShardStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRenters
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRenters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRenters
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRenters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRenters
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRenters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_tron_us_protobuf_types.StdTimeUnmarshal(&m.LastUpdated, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRenters(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRenters
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRenters
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RenterShardSignedContracts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRenters
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RenterShardSignedContracts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RenterShardSignedContracts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignedEscrowContract", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRenters
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRenters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SignedEscrowContract = append(m.SignedEscrowContract[:0], dAtA[iNdEx:postIndex]...)
			if m.SignedEscrowContract == nil {
				m.SignedEscrowContract = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignedGuardContract", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRenters
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRenters
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SignedGuardContract = append(m.SignedGuardContract[:0], dAtA[iNdEx:postIndex]...)
			if m.SignedGuardContract == nil {
				m.SignedGuardContract = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRenters(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRenters
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRenters
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRenters(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRenters
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRenters
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRenters
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRenters
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRenters
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRenters        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRenters          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRenters = fmt.Errorf("proto: unexpected end of group")
)
